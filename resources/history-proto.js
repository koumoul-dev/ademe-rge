'use strict'; // code generated by pbf v3.2.1

// HistoryData ========================================

var HistoryData = exports.HistoryData = {};

HistoryData.read = function (pbf, end) {
    return pbf.readFields(HistoryData._readField, {lastProcessedDay: 0, map: {}}, end);
};
HistoryData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lastProcessedDay = pbf.readVarint();
    else if (tag === 2)  { var entry = HistoryData._FieldEntry2.read(pbf, pbf.readVarint() + pbf.pos); obj.map[entry.key] = entry.value; }
};
HistoryData.write = function (obj, pbf) {
    if (obj.lastProcessedDay) pbf.writeVarintField(1, obj.lastProcessedDay);
    if (obj.map) for (var i in obj.map) if (Object.prototype.hasOwnProperty.call(obj.map, i)) pbf.writeMessage(2, HistoryData._FieldEntry2.write, { key: i, value: obj.map[i] });
};

// HistoryData._FieldEntry2 ========================================

HistoryData._FieldEntry2 = {};

HistoryData._FieldEntry2.read = function (pbf, end) {
    return pbf.readFields(HistoryData._FieldEntry2._readField, {key: "", value: 0}, end);
};
HistoryData._FieldEntry2._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readVarint();
};
HistoryData._FieldEntry2.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeVarintField(2, obj.value);
};
